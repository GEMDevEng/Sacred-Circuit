name: Deploy to Vercel

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Generate test coverage
        run: npm run test:coverage

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Start server
        run: npm run start:ci &
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}

      - name: Wait for server
        run: npx wait-on http://localhost:3000

      - name: Run Cypress tests
        run: npm run cypress:run
        env:
          CYPRESS_BASE_URL: http://localhost:3000

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots/

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos/

  deploy:
    name: Deploy
    needs: [test, e2e-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Build project
        run: npm run build

      - name: Deploy to Vercel
        run: |
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }} \
            --env OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            --env AIRTABLE_API_KEY=${{ secrets.AIRTABLE_API_KEY }} \
            --env AIRTABLE_BASE_ID=${{ secrets.AIRTABLE_BASE_ID }} \
            --env MAILCHIMP_API_KEY=${{ secrets.MAILCHIMP_API_KEY }} \
            --env JWT_SECRET=${{ secrets.JWT_SECRET }} \
            --env JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} \
            --env SENTRY_DSN=${{ secrets.SENTRY_DSN }} \
            --yes

  post-deploy-verification:
    name: Post-Deploy Verification
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify deployment
        run: node scripts/verify-deployment.js
        env:
          DEPLOYMENT_URL: ${{ secrets.DEPLOYMENT_URL }}
